services:

  portainer-agent-dh:
    ports:
      - 9001:9001/tcp
    container_name: PortainerAgent-DH
#    image: portainer/agent:2.27.4
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/snap/docker/common/var-lib-docker/volumes:/var/lib/docker/volumes
    restart: always

  # https://www.reddit.com/r/Traefik/comments/w8v52z/running_traefik_with_multiple_docker_hosts/
  traefik-kop-dh:
    image: "ghcr.io/jittering/traefik-kop:latest"
    container_name: TreaefikKop-DH
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - REDIS_ADDR="10.0.4.94:6379"
      - BIND_IP="10.0.4.53"
      - KOP_HOSTNAME=dockerhost
    restart: always

  watchtower:
    image: containrrr/watchtower
    container_name: WatchTower
    network_mode: bridge
    environment:
      # Cron expressions like defined here: https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
      - WATCHTOWER_SCHEDULE=0 30 6 * * *
      - TZ=Europe/Amsterdam
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_DEBUG=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  plex:
    image: plexinc/pms-docker
#    network_mode: host
    container_name: Plex
#    mem_limit: 5g
#    cpu_shares: 1024
#    security_opt:
#      - no-new-privileges:true
#    privileged: true
    healthcheck:
      test: ["CMD-SHELL", "curl --connect-timeout 15 --silent --show-error --fail http://localhost:32400/identity || exit 1"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s
    environment:
#      - PLEX_UID=${UID}
#      - PLEX_GID=${GID}
      - VERSION=latest
      - TZ=Europe/Amsterdam
      - HOME=/config
      - CHANGE_CONFIG_DIR_OWNERSHIP=true
      - PLEX_CLAIM=${PLEX_CLAIM}
    ports:
      - "32400:32400"
    volumes:
      - ${VOLUMEDIR}/plex:/config:rw
      - ${VOLUMEDIR}/plex:/transcode:rw
      - ${MEDIADIR}:/data:rw
    devices:
      # Enable hardware assist when using Intel Quick Sync supported CPUs
      - /dev/dri:/dev/dri
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.home.local`)"
      - "traefik.http.routers.plex.entrypoints=web,websecure"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
    restart: always

  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest
    container_name: Tdarr
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=Europe/Amsterdam
    ports:
      - "8265:8265" # Web UI
      - "8266:8266" # Server port (for nodes to connect)
    volumes:
      - ${VOLUMEDIR}/tdarr/configs:/app/configs
      - ${VOLUMEDIR}/tdarr/logs:/app/logs
      - ${VOLUMEDIR}/tdarr/transcode:/transcode
      - ${MEDIADIR}:/media # shared with Plex
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tdarr.rule=Host(`tdarr.home.local`)"
      - "traefik.http.routers.tdarr.entrypoints=web,websecure"
      - "traefik.http.services.tdarr.loadbalancer.server.port=8265"
    restart: unless-stopped

  tdarr-node:
    image: ghcr.io/haveagitgat/tdarr_node:latest
    container_name: TdarrNode-DH
    environment:
      - TZ=Europe/Amsterdam
      - PUID=${UID}
      - PGID=${GID}
      - nodeName=DockerHostNode
      - serverIP=tdarr
      - serverPort=8266
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - ${VOLUMEDIR}/tdarr/configs:/app/configs
      - ${VOLUMEDIR}/tdarr/logs:/app/logs
      - ${MEDIADIR}:/media # same path for input/output
    restart: unless-stopped

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: Overseerr
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=Europe/Amsterdam
    ports:
      - "5055:5055"
    depends_on:
      plex:
#        condition: service_healthy
        condition: service_started
#    dns:
#      # AdguardHome
#      - 10.0.4.94
#      #- 9.9.9.11
    volumes:
      - ${VOLUMEDIR}/overseerr:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.rule=Host(`overseerr.home.local`)"
      - "traefik.http.routers.overseerr.entrypoints=web,websecure"
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"
    restart: always

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: Tautulli
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=Europe/Amsterdam
    ports:
      - "8181:8181"
    depends_on:
      plex:
#        condition: service_healthy
        condition: service_started
    volumes:
      - ${VOLUMEDIR}/tautulli:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tautulli.rule=Host(`tautulli.home.local`)"
      - "traefik.http.routers.tautulli.entrypoints=web,websecure"
      - "traefik.http.services.tautulli.loadbalancer.server.port=8181"
    restart: always

  gluetun:
    image: qmcgaw/gluetun
    container_name: Gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 7091:8080     # qBittorrent Web UI
      - 6789:6789     # NZBget Web UI
      - 9696:9696     # Prowlarr
      - 7878:7878     # Radarr
      - 8989:8989     # Sonarr
      - 8787:8787     # Readarr
    environment:
      - VPN_SERVICE_PROVIDER=nordvpn
      - VPN_TYPE=wireguard
      - DNS_ADDRESS=1.1.1.1
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - SERVER_COUNTRIES=Netherlands
      - SERVER_CITIES=Amsterdam
      - FIREWALL_OUTBOUND_SUBNETS=10.0.4.0/24
      - VPN_INTERFACE=tun0
      - TZ=Europe/Amsterdam
      - HEALTH_ADDRESS_TO_PING=1.1.1.1
    volumes:
      - ${VOLUMEDIR}/gluetun:/gluetun
      - /etc/localtime:/etc/localtime:ro
    restart: always

  qbittorrent:
    image: ghcr.io/hotio/qbittorrent:release-4.6.0
    container_name: qBittorrent
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=Europe/Amsterdam
    volumes:
      - ${VOLUMEDIR}/qbittorrent:/config
      - ${MEDIADIR}/downloads:/app/qBittorrent/downloads
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
#        condition: service_healthy
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.home.local`)"
      - "traefik.http.routers.qbittorrent.entrypoints=web,websecure"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=7091"
    restart: always

  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: NZBget
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=Europe/Amsterdam
      - NZBGET_USER=${NZBGET_USER}
      - NZBGET_PASS=${NZBGET_PASS}
    volumes:
      - ${VOLUMEDIR}/nzbget:/config
      - ${MEDIADIR}/downloads:/downloads
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
#        condition: service_healthy
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.home.local`)"
      - "traefik.http.routers.nzbget.entrypoints=web,websecure"
      - "traefik.http.services.nzbget.loadbalancer.server.port=6789"
    restart: always

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: Prowlarr
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=Europe/Amsterdam
    volumes:
      - ${VOLUMEDIR}/prowlarr:/config
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
#        condition: service_healthy
        condition: service_started
      byparr:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.home.local`)"
      - "traefik.http.routers.prowlarr.entrypoints=web,websecure"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    restart: always
  
  byparr:
    image: ghcr.io/thephaseless/byparr:latest
    container_name: Byparr
    shm_size: 2gb
    # Uncomment below to use byparr outside of internal network
    # ports:
    #   - "8191:8191"
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
#        condition: service_healthy
        condition: service_started
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
    # Uncomment below to use pproxy
    #   - PROXY=http://pproxy:8080
    volumes:
      - ${VOLUMEDIR}/byparr/screenshots:/app/screenshots # (optional) For screenshots when exception occurs
  # # Uncomment the following lines to enable pproxy for socks5 proxy
  # pproxy:
  #   tty: true # Required for pproxy to work
  #   container_name: pproxy
  #   restart: unless-stopped
  #   image: mosajjal/pproxy:latest
  #   command:
  #     - -vv
  #     - -l http://:8080
  #     - -r socks5://host:port#username:password # Fill in your proxy credentials and address
    restart: always

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: Radarr
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=Europe/Amsterdam
    volumes:
      - ${VOLUMEDIR}/radarr:/config
      - ${MEDIADIR}/movies:/movies
      # qBittorrent
      - ${MEDIADIR}/downloads:/app/qBittorrent/downloads
      # NZBget
      - ${MEDIADIR}/downloads/complete/Movies:/downloads/complete/Movies
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
#        condition: service_healthy
        condition: service_started
      qbittorrent:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.home.local`)"
      - "traefik.http.routers.radarr.entrypoints=web,websecure"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    restart: always

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: Sonarr
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=Europe/Amsterdam
    volumes:
      - ${VOLUMEDIR}/sonarr:/config
      - ${MEDIADIR}/series:/tv
      # qBittorrent
      - ${MEDIADIR}/downloads:/app/qBittorrent/downloads
      # NZBget
      - ${MEDIADIR}/downloads/complete/Series:/downloads/complete/Series
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
#        condition: service_healthy
        condition: service_started
      qbittorrent:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.node=dockerhost"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.home.local`)"
      - "traefik.http.routers.sonarr.entrypoints=web,websecure"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    restart: always

  readarr:
    image: lscr.io/linuxserver/readarr:nightly
    container_name: Readarr
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=Europe/Amsterdam
    volumes:
      - ${VOLUMEDIR}/readarr:/config
      - ${MEDIADIR}/books:/books
      # qBittorrent
      - ${MEDIADIR}/downloads:/app/qBittorrent/downloads
      # NZBget
      - ${MEDIADIR}/downloads/complete/Books:/downloads/complete/Books
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
#        condition: service_healthy
        condition: service_started
      qbittorrent:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.node=dockerhost"
      - "traefik.http.routers.readarr.rule=Host(`readarr.home.local`)"
      - "traefik.http.routers.readarr.entrypoints=web,websecure"
      - "traefik.http.services.readarr.loadbalancer.server.port=8787"
    restart: always

#  prometheus:
#    image: bitnami/prometheus:latest
#    ports:
#      - 9001:9090
#    volumes:
#      - ./prometheus:/etc/prometheus
#      - prometheus-data:/prometheus
#    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: Grafana
#    user: ${UID}
    volumes:
      - ${VOLUMEDIR}/grafana:/var/lib/grafana
    ports:
      - 3001:3000
    labels:
      - "traefik.enable=true"
      - "traefik.node=dockerhost"
      - "traefik.http.routers.grafana.rule=Host(`grafana.home.local`)"
      - "traefik.http.routers.grafana.entrypoints=web,websecure"
      - "traefik.http.services.grafana.loadbalancer.server.port=3001"
    restart: unless-stopped

#  vault:
#    image: vault:latest
#    container_name: Vault
#    ports:
#      - "8200:8200"
#    volumes:
#      - /volume1/docker/vault/file:/vault/file:rw
#      - /volume1/docker/vault/config:/vault/config:rw
#      - /volume1/docker/vault/policies:/vault/policies:rw
#      - /volume1/docker/vault/data:/vault/data:rw
#    environment:
#      - VAULT_ADDR=http://0.0.0.0:8200
#      - VAULT_API_ADDR=http://0.0.0.0:8200
#      - VAULT_ADDRESS=http://0.0.0.0:8200
#    cap_add:
#      - IPC_LOCK
#    entrypoint: vault server -config=/vault/config/vault.json
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.vault.rule=Host(`vault.home.local`)"
#      - "traefik.http.routers.vault.entrypoints=web,websecure"
#      - "traefik.http.services.vault.loadbalancer.server.port=8200"
#    restart: unless-stopped

  gitlab-runner:
    container_name: GitlabRunner
    image: 'gitlab/gitlab-runner:latest'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${VOLUMEDIR}/gitlab-runner:/etc/gitlab-runner
    restart: unless-stopped
      
  nextcloud-db:
    image: mariadb:10.5
    container_name: NextCloudDB
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - ${VOLUMEDIR}/nextcloud/database:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - PUID=${UID}
      - PGID=${GID}
    restart: always

  nextcloud-app:
    image: linuxserver/nextcloud:latest
#    build:
#      context: .
#      dockerfile: Dockerfile.vaapi
    container_name: NextCloud
    ports:
      - 8081:80
    devices:
      - /dev/dri:/dev/dri  # ⬅️ Enable Intel Quick Sync
    group_add:
      - 44   # video
      - 104  # render
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=Europe/Amsterdam
    links:
      - nextcloud-db
    volumes:
      - ${VOLUMEDIR}/nextcloud/config:/config
      - ${VOLUMEDIR}/nextcloud/data:/data
      - /mnt/Alessandro:/mnt/Alessandro
    labels:
      - "traefik.enable=true"
      - "traefik.node=dockerhost"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.home.local`)"
      - "traefik.http.routers.nextcloud.entrypoints=web,websecure"
    restart: always

  # See https://github.com/ONLYOFFICE/Docker-DocumentServer/
  onlyoffice-document-server:
    image: onlyoffice/documentserver:latest
    container_name: OnlyOffice
    ports:
      - "8083:80"
    environment:
      - JWT_ENABLED=true
      - JWT_SECRET=${ONLYOFFICE_DOCUMENT_SERVER_JWT_SECRET}
    restart: always

  beszel-agent-dh:
    image: "henrygd/beszel-agent"
    container_name: BeszelAgent-DH
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # monitor other disks / partitions by mounting a folder in /extra-filesystems
      # - /mnt/disk/.beszel:/extra-filesystems/sda1:ro
    environment:
      LISTEN: 45876
      KEY: ${BESZEL_AGENT_DOCKERHOST_PUBLIC_KEY}
    restart: always
